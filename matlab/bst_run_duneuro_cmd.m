function cfg = bst_run_duneuro_cmd(cfg)
% cfg = bst_run_duneuro_cmd(cfg)

% set the arguments and run the duneuro computation.
% Author , Takfarinas MEDANI, December 2019,


%% Se minimal configuration
if ~isfield(cfg,'BstDuneuroVersion');  cfg.BstDuneuroVersion = 2; end

% the configuration file.
if cfg.runFromBst
    arg1 = fullfile(cfg.pathOfTempOutPut, cfg.mini_filename);
else
    arg1 = cfg.mini_filename;
end

% run the command
% To avoid the display on the terminal : use : evalc('[status,cmdout] = system([cfg.cmd '.exe' ' '  arg1]);;')
% version 1
if cfg.BstDuneuroVersion == 1
    if ispc
        [status,cmdout] = system([cfg.cmd '.exe' ' '  arg1]);
    elseif isunix
        [status,cmdout] = system(['./' cfg.cmd ' '  arg1]);
    elseif ismac
        [status,cmdout] = system(['./' cfg.cmd ' '  arg1]);
    end
end
% version 2
if cfg.BstDuneuroVersion == 2
    % check space in the command line ....
    arg2 = [' '  '--' cfg.modality];
    TF = sum(isspace(cfg.cmd));
    if ~TF
        if ispc
            [status,cmdout] = system([cfg.cmd '.exe' ' '  arg1 arg2])  ;
        elseif isunix
            [status,cmdout] = system(['./' cfg.cmd ' '  arg1 arg2]);
        elseif ismac
            [status,cmdout] = system(['./' cfg.cmd ' '  arg1 arg2]);
        end
    else % avoid the error generated by the space in the path name
        copyfile(fullfile(cfg.pathOfDuneuroToolbox,'bin','*'),(fullfile(cfg.pathOfTempOutPut)),'f') % may be not needed ...
        currentPath = pwd;
        cd(cfg.pathOfTempOutPut)
        [filepath,cmd,ext] = fileparts(cfg.cmd);
        [filepath,arg1b,ext] = fileparts(arg1);
        if ispc
            [status,cmdout] = system([cmd '.exe' ' '  [arg1b ext] arg2])  ;
        elseif isunix
            [status,cmdout] = system(['./' cmd ' '  [arg1b ext] arg2]);
        elseif ismac
            [status,cmdout] = system(['./' cmd ' '  [arg1b ext] arg2]);
        end
        cd(currentPath)
    end
end


% version 3 the modality is included on the ini file
if cfg.BstDuneuroVersion == 3
    % check space in the command line ....
    TF = sum(isspace(cfg.cmd));
    if ~TF
        if ispc
            [status,cmdout] = system([cfg.cmd '.exe' ' '  arg1 ])  ;
        elseif isunix
            [status,cmdout] = system(['./' cfg.cmd ' '  arg1 ]);
        elseif ismac
            [status,cmdout] = system(['./' cfg.cmd ' '  arg1 ]);
        end
    else % avoid the error generated by the space in the path name
        % This is an exception where the binaires will be copied to the
        % temporary flder in order to aoid this error ... TODO : look for
        % better solution .... Ask Francois
        copyfile(fullfile(cfg.pathOfDuneuroToolbox,'bin','*'),(fullfile(cfg.pathOfTempOutPut)),'f') % may be not needed ...
        currentPath = pwd;
        cd(cfg.pathOfTempOutPut)
        [filepath,cmd,ext] = fileparts(cfg.cmd);
        [filepath,arg1b,ext] = fileparts(arg1);
        if ispc
            [status,cmdout] = system([cmd '.exe' ' '  [arg1b ext] ])  ;
        elseif isunix
            [status,cmdout] = system(['./' cmd ' '  [arg1b ext] ]);
        elseif ismac
            [status,cmdout] = system(['./' cmd ' '  [arg1b ext] ]);
        end
        cd(currentPath)
    end
end

%% Check status
if status ~= 0
    duneuro_logfile = fullfile(cfg.pathOfTempOutPut,'binaries_duneuro_log.txt');
    fid = fopen(duneuro_logfile , 'w');
    fprintf(fid, '%st', cmdout);
    fprintf(fid, '%st', ' Load the file duneuro_configuration for manual debuging/data checking');
    fclose(fid);
    save(fullfile(cfg.pathOfTempOutPut,'duneuro_configuration'), 'cfg');
    fclose('all');
    if cfg.runFromBst == 1; bst_progress('stop'); end
    error('Something was wrong during duneuro computation.\nPlease check %s', duneuro_logfile);
else
    if cfg.displayComment ==1;     disp('DuNeuro FEM computation completed without error '); end
end

end
